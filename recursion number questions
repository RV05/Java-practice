public class Main
{
	public static void main(String[] args) {

// 		System.out.println(fib(5));

// 		int[] arr={1,2,3,4,5,6,78,98};
// 		System.out.println(binarysearch(arr,98,0,arr.length-1));

// printnto1(5);

// print1ton(5);

// System.out.println(factorial(5));

// System.out.println(sum(5));

// System.out.println(sumofdigits(15));

// System.out.println(product(65));

// reversenumber(1234);
// System.out.println(sum);

System.out.println(countzeros(209200));



	}
	
	
	
	public static int fib(int n){
	    if(n==1||n==0)
	    return n;
	    return fib(n-1)+fib(n-2);
	    
	}
	
	public static int binarysearch(int[] arr,int target,int s,int e){
	    
	    if(s>e)
	    return -1;
	    
	    int m= s+(e-s) /2;
	  
	    if(arr[m]==target){
	        return m;
	    }
	    
	    if(target<arr[m]){
	        binarysearch(arr,target,s,m-1);
	    }
	    
	    
	    return binarysearch(arr,target,m+1,e);
	    
	}
	
	
	public static void printnto1(int n){
	    if (n==0)
	    return;
	    
	    System.out.println(n);
	    printnto1(n-1);
	}
	
	public static void print1ton(int n){
	    if (n==0)
	    return;
	   
	    print1ton(n-1);
	    System.out.println(n);
	}
	
		public static int factorial(int n){
		    if (n==1)
		    return 1;
		    
		    
		    
		    return n*factorial(n-1);
		    
		}
	
	
	public static int sum(int n){
	if (n==1)
	return 1;
	
	return n+sum(n-1);
	    
	}
	
	
	public static int sumofdigits(int n){
	    
	    if(n==0)
	    return 0;
	    
	    return sumofdigits(n/10)+n%10;
	    
	    
	}
	
	public static int product(int n){
	    
	    if(n%10==n)
	    return n;
	    
	    return n%10*product(n/10);
	    
	    
	}
	static int sum=0;
	public static void reversenumber(int n){ 
	    
	    if(n==0)
	    return;
	    int rem=n%10;
	    sum=sum*10+rem;
	    reversenumber(n/10);
	}
	
	
	public static int countzeros(int n){
	    return helper(n,0);
	}
	
	public static int helper(int n,int c){
	    if(n==0)
	    return c;
	    
	    int rem=n%10;
	    if(rem==0)
	    return helper(n/10,c+1);
	    
	    return helper(n/10,c);
	    
	}
	
	
	
	
	
	
	
}
