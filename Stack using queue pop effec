

public class Main
{
	public static void main(String[] args) throws Exception{
	
	
	SUQPopEffecient queue =new SUQPopEffecient();{
	    for(int i=1;i<=5;i++){
	        stack.push(i*10);
	    }
	    //10 20 30 40 50
	    stack.display();
	    System.out.println(stack.pop());//10
	    stack.display();//20 30 40 50
	    System.out.println(stack.top());
	}
	}
}




 
 
 class SUQPopEffecient{
    private DynamicQueue primary;
    private DynamicQueue secondary;
    
    public SUQPopEffecient() throws Exception{
        this.primary=new DynamicQueue();
        this.secondary=new DynamicQueue();
    }
    public int size(){
         return this.primary.size();
    }
    public boolean isEmpty(){
    return this.primary.isEmpty();
        
    }
    
    public void push(int data) throws Exception{
        while(this.primary.size()!=0){
            this.secondary.enqueue(this.primary.dequeue());
        }
       this.primary.enqueue(data);
        while(this.secondary.size()!=0){
            this.primary.enqueue(secondary.dequeue());
        }
    }
    
    public int top() throws Exception{
     return this.primary.front();
    }
    
   
    
    public void display() throws Exception{
        
        this.primary.display();
        
    }
    
    
    
    
}
