

public class Main
{
	public static void main(String[] args) throws Exception {
	StackUsingArrays stack= new DynamicStack(5);
// 	stack.push(10);
for(int i=1;i<=5;i++){
    stack.push(i*10);
    stack.display();
}
stack.push(60);
stack.push(70);
stack.push(80);
stack.display();
	System.out.println(stack.top());
	while(!stack.isEmpty()){
	    stack.display();
	    stack.pop();
	    
	}
// 	stack.pop();
	}
}

class StackUsingArrays{
    protected int[] data;
    protected int top;
    
    public static final int DEFAULT_CAPACITY=100;
    public StackUsingArrays() throws Exception{
        this(DEFAULT_CAPACITY);
    }
    
    public StackUsingArrays(int capacity) throws Exception{
        if(capacity<1){
            throw new Exception("Invalid Capacity");
        }
        
        this.data=new int[capacity];
        this.top=-1;
    }
    public int size(){
        return this.top+1;
    }
    public boolean isEmpty(){
        return this.size()==0;
    }
    public void push(int value) throws Exception{
        if(this.size()==this.data.length){
            throw new Exception("Stack is full");
        }
        this.top++;
        this.data[this.top]=value;
    }
    public int pop() throws Exception{
    
        if(this.size()==0){
            throw new Exception("Stack is empty");
        }
        int rv=this.data[this.top];
        this.data[this.top]=0;
        this.top--;
        return rv;
    }
     public int top() throws Exception{
    
        if(this.size()==0){
            throw new Exception("Stack is empty");
        }
        int rv=this.data[this.top];
        
        return rv;
    }
    public void display(){
        for(int i=this.top;i>=0;i--){
            System.out.println(this.data[i]+", ");
        }
        System.out.println("END");
    }
    
    
    
}

class DynamicStack extends StackUsingArrays{
    
public DynamicStack() throws Exception{
    this(DEFAULT_CAPACITY);
}
public DynamicStack(int capacity) throws Exception{
    
super(capacity);
    
}
public void push(int item) throws Exception{
    if(this.size()==this.data.length){
        int[] arr =new int[2*this.data.length];
        for(int i=0;i<this.size();i++){
            arr[i]=this.data[i];
        }
        this.data=arr;
    }
    super.push(item);
}
}










